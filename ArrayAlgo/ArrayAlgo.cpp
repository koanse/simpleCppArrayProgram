// Подключение заголовочных файлов
#include "stdafx.h"
#include <clocale>
#include <iostream>
#include <ctime>


int main()
{
	// Задание русской кодировки
	setlocale(LC_ALL, "Russian");

	std::cout << "Определение максимального значения массива элементов double" << std::endl;
	
	// Запрос размера массива через вывод на стандартный поток std::cout
	std::cout << "Введите размер массива:" << std::endl;

	// Объявление переменной - размера массива
	int size;

	// Ввод размера массива из стандартного потока консольного воода std::cin
	std::cin >> size;

	// Проверка правильности ввода размера массива пользователем	
	if (size <= 0)
	{
		std::cout << "Неверный размер массива!" << std::endl;
		// Ожидание нажатия пользователем на любую клавишу (для просмотра резульаттов работы)
		system("pause");

		// Возврат 1, что означает завершение программы с ошибокой
		return 1;
	}

	// Объявления массива для обработки (указателя на double)
	double *values;

	// Выделение памяти для массива
	values = new double[size];

	// Инициализация генератора псевдослучаыных чисел временем (для избежания повторения случайных чисел)
	srand(time(NULL));
	
	// Заполнение массива псевдослучайными числами	
	for (int i = 0; i < size; i++)
	{
		// Генерация вещественных чисел от 0 до 100 (rand - функция для генерации чисел от 0 до константы RAND_MAX)
		values[i] = (double)rand() / RAND_MAX * 100;
	}

	// Вывод массива псевдослучайных чисел
	std::cout << "Сгенерированный массив:" << std::endl;
	for (int i = 0; i < size; i++)
	{		
		std::cout << "values[" << i << "] = " << values[i] << std::endl;
	}

	// Переменная, хранящая минимальное значение массива
	double max;

	// Инициализация переменной max первым элементом массива
	max = values[0];

	// Определение максиамльного значения в массиве
	for (int i = 0; i < size; i++)
	{
		if (max < values[i])
		{
			max = values[i];
		}		
	}

	// Вывод результата работы алгоритма (максимума)
	std::cout << "max = " << max << std::endl;

	// Ожидание нажатия пользователем на любую клавишу (для просмотра резульаттов работы)
	system("pause");

	// Возврат 0, что означает завершение программы без ошибок
    return 0;
}

